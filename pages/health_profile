import React from "react";
import { useAuthStore } from "../utils/auth-store";
import { AuthCheck } from "../components/AuthCheck";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { toast } from "sonner";
import brain from "brain";

const AGE_GROUPS = [
  "18-30",
  "31-50",
  "51-70",
  "70+"
];

const HEALTH_CONDITIONS = [
  "Asthma",
  "Heart Disease",
  "Diabetes",
  "High Blood Pressure",
  "Respiratory Issues",
  "Joint Pain"
];

const WEATHER_SENSITIVITIES = [
  "Heat Sensitive",
  "Cold Sensitive",
  "Humidity Sensitive",
  "Pressure Changes"
];

export default function HealthProfile() {
  const { user } = useAuthStore();
  const [loading, setLoading] = React.useState(false);
  const [ageGroup, setAgeGroup] = React.useState("");
  const [conditions, setConditions] = React.useState<string[]>([]);
  const [sensitivities, setSensitivities] = React.useState<string[]>([]);
  const [tempHigh, setTempHigh] = React.useState("35");
  const [tempLow, setTempLow] = React.useState("0");

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!user) return;

    setLoading(true);
    try {
      const response = await brain.create_profile({
        user_id: user.uid,
        age_group: ageGroup,
        conditions,
        weather_sensitivities: sensitivities,
        temperature_threshold_high: parseFloat(tempHigh),
        temperature_threshold_low: parseFloat(tempLow),
        humidity_sensitivity: sensitivities.includes("Humidity Sensitive")
      });

      if (response.ok) {
        toast.success("Health profile updated successfully!");
      } else {
        throw new Error("Failed to update profile");
      }
    } catch (error) {
      toast.error("Failed to update health profile");
    } finally {
      setLoading(false);
    }
  };

  const toggleCondition = (condition: string) => {
    setConditions(prev =>
      prev.includes(condition)
        ? prev.filter(c => c !== condition)
        : [...prev, condition]
    );
  };

  const toggleSensitivity = (sensitivity: string) => {
    setSensitivities(prev =>
      prev.includes(sensitivity)
        ? prev.filter(s => s !== sensitivity)
        : [...prev, sensitivity]
    );
  };

  return (
    <AuthCheck>
      <div className="min-h-screen bg-background py-8">
        <div className="container mx-auto px-4">
          <h1 className="text-3xl font-bold text-center mb-8">Health Profile</h1>
          <Card className="max-w-2xl mx-auto">
            <CardHeader>
              <CardTitle>Your Health Information</CardTitle>
            </CardHeader>
            <CardContent>
              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="space-y-2">
                  <Label>Age Group</Label>
                  <Select value={ageGroup} onValueChange={setAgeGroup}>
                    <SelectTrigger>
                      <SelectValue placeholder="Select age group" />
                    </SelectTrigger>
                    <SelectContent>
                      {AGE_GROUPS.map(age => (
                        <SelectItem key={age} value={age}>{age}</SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label>Health Conditions</Label>
                  <div className="grid grid-cols-2 gap-4">
                    {HEALTH_CONDITIONS.map(condition => (
                      <div key={condition} className="flex items-center space-x-2">
                        <Checkbox
                          id={condition}
                          checked={conditions.includes(condition)}
                          onCheckedChange={() => toggleCondition(condition)}
                        />
                        <Label htmlFor={condition}>{condition}</Label>
                      </div>
                    ))}
                  </div>
                </div>

                <div className="space-y-2">
                  <Label>Weather Sensitivities</Label>
                  <div className="grid grid-cols-2 gap-4">
                    {WEATHER_SENSITIVITIES.map(sensitivity => (
                      <div key={sensitivity} className="flex items-center space-x-2">
                        <Checkbox
                          id={sensitivity}
                          checked={sensitivities.includes(sensitivity)}
                          onCheckedChange={() => toggleSensitivity(sensitivity)}
                        />
                        <Label htmlFor={sensitivity}>{sensitivity}</Label>
                      </div>
                    ))}
                  </div>
                </div>

                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label>High Temperature Threshold (°C)</Label>
                    <Input
                      type="number"
                      value={tempHigh}
                      onChange={(e) => setTempHigh(e.target.value)}
                      min="20"
                      max="50"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>Low Temperature Threshold (°C)</Label>
                    <Input
                      type="number"
                      value={tempLow}
                      onChange={(e) => setTempLow(e.target.value)}
                      min="-20"
                      max="20"
                    />
                  </div>
                </div>

                <Button type="submit" className="w-full" disabled={loading}>
                  {loading ? "Updating..." : "Save Profile"}
                </Button>
              </form>
            </CardContent>
          </Card>
        </div>
      </div>
    </AuthCheck>
  );
}
